class Solution:
    def checkIslands(self, grid, r , c):
        print('c',r,c)
        m = len(grid)
        n = len(grid[0])
        
        queue = [(r,c)]
        
        while queue:
            (q1,q2) = queue.pop(0)
            
            if 0<=q1<=m-1 and 0<=q2<=n-1 and grid[q1][q2] == '1':
                #print(q1,q2)
                grid[q1][q2] = '0'
                queue+=[(q1+1,q2),(q1-1,q2),(q1,q2+1),(q1,q2-1)]
              
    
        return grid
        
    def numIslands(self, grid: List[List[str]]) -> int:
        count = 0
        
        m = len(grid)
        
        if not m:
            return 0
        
        n = len(grid[0])
        
       
        for i in range(m):
            for j in range(n):
                if grid[i][j] == '1':
                    count+=1
                    grid = self.checkIslands(grid,i,j)
                    
        return count