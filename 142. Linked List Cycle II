# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: ListNode) -> ListNode:
        
        if not head or not head.next: return None
        
        ptr1 = head.next
        ptr2 = head.next.next
        
        
        while ptr1 and ptr2:
            if ptr1 == ptr2:
                break
            ptr1 = ptr1.next
            
            if not ptr2.next:return None
                
            ptr2 = ptr2.next.next
            
            
        if not ptr1 or not ptr2: return None
        
        ptr1 = head
        
        while not ptr1 == ptr2:
            ptr1 = ptr1.next
            ptr2 = ptr2.next
            
        return ptr1
        
        