# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def checkSubtree(self, node1, node2):
        if node1 and node2:
            return node1.val == node2.val and self.checkSubtree(node1.left, node2.left) and self.checkSubtree(node1.right, node2.right)
        elif not node1 and not node2:
            return True
        return False
    
    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:
        
        queue = [s]
        
        while queue:
            curr_node = queue.pop(0)
            if self.checkSubtree(curr_node, t): return True
            if curr_node.left: queue.append(curr_node.left)
            if curr_node.right: queue.append(curr_node.right)
            
        return False