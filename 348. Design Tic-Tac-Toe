class TicTacToe(object):
    

    def __init__(self, n):
        """
        Initialize your data structure here.
        :type n: int
        """
        from collections import defaultdict
        
        self.n = n
        
        self.matrix = [[None for i in range(n)] for j in range(n)]
        
        
        self.d = {}
        
        self.d['row_sum'] = defaultdict(int)
        self.d['col_sum'] = defaultdict(int)
        self.d['diag_sum_left'] = 0
        self.d['diag_sum_right'] = 0
        
        

    def move(self, row, col, player):
        """
        Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins.
        :type row: int
        :type col: int
        :type player: int
        :rtype: int
        """
        p = 1 if player == 1 else -1
        
        if self.matrix[row][col] == None:
            self.matrix[row][col] = player
            
            self.d['row_sum'][row]+=p
            self.d['col_sum'][col]+=p
            
            if row == col:
                self.d['diag_sum_left']+=p
            
            if row+col == self.n-1:
                self.d['diag_sum_right']+=p
                
            k = self.n*p
                
            if self.d['row_sum'][row] == k or self.d['col_sum'][col] == k or self.d['diag_sum_left'] == k or self.d['diag_sum_right'] == k:
                return player
        
        return 0
                
            
                
            
            
            
        


# Your TicTacToe object will be instantiated and called as such:
# obj = TicTacToe(n)
# param_1 = obj.move(row,col,player)