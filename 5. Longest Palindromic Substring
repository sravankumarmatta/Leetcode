class Solution:
    def checkPalindrome(self, s, left, right):
        n = len(s)
        while left>=0 and right<n and s[left] == s[right]:
            left -=1
            right+=1
            
        return right-left-1
        
    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        
        if n<=1:
            return s
        
        start = 0
        end = 0
        
        for i in range(n):
            l1 = self.checkPalindrome(s,i,i)
            l2 = self.checkPalindrome(s,i,i+1)
            m = max(l1,l2)
            if m > end-start:
                start = i -(m-1)//2
                end = i + m//2
                
        return s[start:end+1]